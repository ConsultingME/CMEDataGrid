<aura:component >
    <aura:dependency resource="markup://c:CMEDataGridCell"/>

	<aura:attribute name="columns" type="List" description="Column configuration object"/>
	<aura:attribute name="datarows" type="List" description="Dataset to be rendered in the grid"/>
	<aura:attribute name="selectAll" type="Boolean" default="false" description="Set to true to enable selecting rows"/>
	<aura:attribute name="selectAllDefault" type="Boolean" default="false" description="Determines default selectability of rows"/>
	<aura:attribute name="selectedrows" type="List" description="Used with selectAll to expose the currently selected rows. Returns rows that are selected and visible (not filtered out.)"/>
	<aura:attribute name="primaryKey" type="String" description="Name of field that uniquely identifies each record in the datarows list"/>
	<aura:attribute name="multiSelect" type="Boolean" default="true" description="Used with selectAll to configure whether the user can select more than one record at a time"/>
	<aura:attribute name="sortBy" type="String" description="Name of field to sort by initially"/>
	<aura:attribute name="sortAsc" type="Boolean" default="true" description="Set to true for Ascending or false for Descending"/>
	<aura:attribute name="pageSize" type="Integer" default="50" description="Set Page Size for large data sets"/>
	<aura:attribute name="pageSizeOptions" type="List" default="[10, 25, 50, 100]" description="Set options for Page Size"/>
    
    <aura:attribute name="filterByText" type="Boolean" default="false" description="Set to true to enable filtering by text. Use IncludeInTextFilter column setting to specify which columns to use in filtering"/>
    <aura:attribute name="filterByTextLocation" type="String" default="center" description="Used to determine the location of the search input. Options include center and right."/>
	<aura:attribute name="filterText" type="String" description="current valid filter text" access="private"/>

	<aura:attribute name="displayIcon" type="Boolean" default="true" description="Indicates if an icon should be displayed in the header."/>

    <aura:attribute name="filterIconName" type="String" description="define the icon using SLDS icon section and name" default="standard:connected_apps"/>
    <aura:attribute name="filterTagLine" type="String" description="tagline that will appear on the far right" default="Search Tag Line"/>
    <aura:attribute name="filterContainerClass" type="String" description="custom container class" default=""/>
    <aura:attribute name="filterPlaceHolder" type="String" description="custom container class" default="Search, filter, etc."/>
    <aura:attribute name="filterTagLineClass" type="String" description="custom tag line class" default=""/>
    
    <aura:attribute name="internaldatarows" type="List" access="private"/>
	<aura:attribute name="displayedrows" type="List" access="private"/>
	<aura:attribute name="pagedrows" type="List" access="private"/>
	<aura:attribute name="pages" type="List" access="private"/>
	<aura:attribute name="currentpage" type="Integer" default="0" />
	<aura:attribute name="movetopage" type="Integer" default="0" />
	<aura:attribute name="internalcolumns" type="List" access="private"/>
	<aura:attribute name="filterlist" type="List" access="private"/>
	<aura:attribute name="filterColumnsIndexList" type="List" access="private"/>
	<aura:attribute name="spinnerId" type="String" default="{!globalId + 'cme-datagrid-clientworking'}" access="private"/>
	<aura:attribute name="filterHeaderList" type="List" access="private"/>
	<aura:attribute name="isSFOne" type="Boolean" default="false" access="private"/>

    <aura:attribute name="rightContent" type="Aura.Component[]"/>
    <aura:attribute name="rightHeaderContent" type="Aura.Component[]"/>
    <aura:attribute name="leftMidHeaderContent" type="Aura.Component[]"/>
    <aura:attribute name="filterCriteria" type="Aura.Component[]"/>

    <aura:method name="updateSelectable" action="{!c.updateSelectable}" description="Call to update whether rows can be selected">
        <aura:attribute name="RowStatusList" type="List"/>
    </aura:method>

    <aura:registerEvent name="rowSelected" type="c:CMEDataGridRowSelected"/>

    <aura:handler name="init" value="{!this}" action="{!c.onInit}" />
    <aura:handler name="change" value="{!v.datarows}" action="{!c.datarowsChanged}"/>
    <aura:handler name="change" value="{!v.internaldatarows}" action="{!c.internaldatarowsChanged}"/>
    <aura:handler name="change" value="{!v.displayedrows}" action="{!c.onDisplayedRowsChanged}"/>
    <aura:handler name="change" value="{!v.movetopage}" action="{!c.onCurrentPageChanged}"/>
    <aura:handler name="change" value="{!v.pageSize}" action="{!c.onPageSizeChanged}"/>
    <aura:handler name="change" value="{!v.filterlist}" action="{!c.onFilterListChanged}"/>
    <aura:handler name="sortRequested" event="c:CMEDataGridSortRequest" action="{!c.handleSortRequest}" description="Used internally when a sort action is requested"/>
    <aura:handler name="rowSelected" event="c:CMEDataGridRowSelected" action="{!c.handleRowSelected}" description="Used internally when a row is selected"/>
    <aura:handler name="filterRequested" event="c:CMEDataGridFilterRequest" action="{!c.handleFilterRequest}" description="Used internally when a filter action is requested"/>

    <div class="cme-datagrid">

            <div class="cme-datagrid-container">
            <aura:if isTrue="{!v.filterByText}">

            	<aura:if isTrue="{! v.filterByTextLocation == 'center'}">
                
	                <div class="{! 'cme-datagrid-filter-container' + ' ' + v.filterContainerClass}">
	                    <div class="slds-grid slds-grid--vertical-align-center slds-grid--align-spread">
							<div class="slds-grid slds-grid--vertical-align-center">
								<aura:if isTrue="{!v.displayIcon}">
			                    	<lightning:icon iconName="{!v.filterIconName}" size="medium" />
								</aura:if>
								<div class="{! 'cme-datagrid-filter-tagline' + ' ' + v.filterTagLineClass}">{!v.filterTagLine}</div>
							</div>
							<div class="slds-grid">
								{!v.leftMidHeaderContent}
							</div>
							<div class="slds-grid">
								<lightning:input aura:id="filterText" type="search" label="Filter" name="filterText" onchange="{!c.onFilterByTextChange}" placeholder="{!v.filterPlaceHolder}" class="cme-datagrid-filter"/>
								<lightning:spinner aura:id="filterSpinner" class="cme-datagrid-hidden"/>
							</div>
							<div class="slds-grid">
								<aura:iteration items="{!v.filterHeaderList}" var="filter">
									<c:CMEDataGridHeaderFilter filter="{!filter}"/>
								</aura:iteration>
								{!v.rightHeaderContent}
							</div>
						</div>
	                </div>

					<!-- TODO: make this explicitly "right", add explicit "left" and make "center" the default -->
	                <aura:set attribute="else">
	                	<div class="{! 'cme-datagrid-filter-container' + ' ' + v.filterContainerClass}">
		                    <div class="slds-grid slds-grid--vertical-align-center">
		                    	<aura:if isTrue="{!v.displayIcon}">
			                    	<div>
										<lightning:icon iconName="{!v.filterIconName}" size="medium" />
									</div>
								</aura:if>
								<div class="slds-grid cme-header-filters">
									<aura:iteration items="{!v.filterHeaderList}" var="filter">
										<c:CMEDataGridHeaderFilter filter="{!filter}"/>
									</aura:iteration>
									{!v.rightHeaderContent}
								</div>
								<div class="slds-col_bump-left">
									<lightning:input aura:id="filterText" type="search" label="Filter" name="filterText" onchange="{!c.onFilterByTextChange}" placeholder="{!v.filterPlaceHolder}" class="cme-datagrid-filter"/>
								</div>
							</div>
		                </div>
	                </aura:set>

                </aura:if>
                
            </aura:if>

            	{!v.filterCriteria}

		        <div class="slds-grid">

			        <div class="{! if(!empty(v.rightContent), 'slds-size--8-of-12', 'slds-size--12-of-12')}">

			        	<table aura:id="datatable" class="slds-table slds-table--bordered slds-table--fixed-layout" role="grid">
				            <thead>
				                <tr class="slds-line-height--reset cme-datagrid-header">
				                    <aura:if isTrue="{!v.selectAll}">
				                        <th scope="col" style="width:3.25rem;" class="slds-text-align--right cme-datagrid-th">
				                            <aura:if isTrue="{!v.multiSelect}">
				                                <div class="slds-th__action slds-th__action--form cme-datagrid-header-checkbox">
				                                    <span class="slds-checkbox">
				                                        <input type="checkbox" aura:id="selectAll" id="{!join('-','cme-datagrid',globalID,'checkbox-selectall')}" onclick="{!c.selectAllClicked}" />
				                                        <label class="slds-checkbox__label" for="{!join('-','cme-datagrid',globalID,'checkbox-selectall')}">
				                                            <span class="slds-checkbox--faux"></span>
				                                            <span class="slds-form-element__label slds-assistive-text">Select All</span>
				                                        </label>
				                                    </span>
				                                </div>
				                            </aura:if>
				                        </th>
				                    </aura:if>
				                    <aura:iteration items="{!v.internalcolumns}" var="col">
				                        <c:CMEDataGridHeaderCell config="{!col}" sortBy="{!v.sortBy}" sortAsc="{!v.sortAsc}"/>
				                    </aura:iteration>
				                </tr>
				            </thead>
				            <tbody id="datatablebody" aura:id="datatablebody">
				                <aura:iteration items="{!v.pagedrows}" var="dr">
				                    <c:CMEDataGridRow data="{!dr}" selectAll="{!v.selectAll}" isSFOne="{!v.isSFOne}"/>
				                </aura:iteration>
				            </tbody>
				        </table>

				        <div class="{! if(v.pages.length le 1, 'cme-datagrid-hidden', 'slds-grid slds-grid_pull-padded-medium slds-grid_vertical-align-center cme-paging')}">

							<div class="slds-p-horizontal_medium">
								<div class="slds-form slds-form_horizontal cme-pagesize">
									<lightning:select aura:id="pageSizeSelect" value="{!v.pageSize}" label="Page Size:" name="pageSize">
										<aura:iteration items="{!v.pageSizeOptions}" var="opt">
											<option text="{!opt}" value="{!opt}"/>
										</aura:iteration>
									</lightning:select>
								</div>
							</div>
							<div class="">
								<lightning:button onclick="{!c.onFirstPage}" disabled="{! v.currentpage == 0}" class="cme-paging-buttons">&lt;&lt;</lightning:button>
							</div>
							<div class="">
								<lightning:button onclick="{!c.onPreviousPage}" disabled="{! v.currentpage == 0}" class="cme-paging-buttons">&lt;</lightning:button>
							</div>
							<div class="">
								<lightning:button onclick="{!c.onNextPage}" disabled="{! v.currentpage == v.pages.length-1}" class="cme-paging-buttons">&gt;</lightning:button>
							</div>
							<div class="">
								<lightning:button onclick="{!c.onLastPage}" disabled="{! v.currentpage == v.pages.length-1}" class="cme-paging-buttons">&gt;&gt;</lightning:button>
							</div>
							<div class="slds-p-horizontal_medium">
								Showing {! (v.pageSize * v.currentpage)+1} to {! (v.pageSize * v.currentpage) + v.pagedrows.length} of {!v.displayedrows.length} entries
							</div>
						</div>

			        </div>

			        <aura:if isTrue="{! !empty(v.rightContent)}">

	        	        <div class="slds-p-horizontal--small slds-size--4-of-12">
	                        {!v.rightContent}       
			            </div>


		            </aura:if>

					<div id="{!v.spinnerId}" class="cme-datagrid-hidden">
						<div role="status" class="slds-spinner slds-spinner_medium cme-spinner">
							<span class="slds-assistive-text">Loading</span>
							<div class="slds-spinner__dot-a"></div>
							<div class="slds-spinner__dot-b"></div>
						</div>
					</div>

                </div>
            
		</div>



    </div>
</aura:component>